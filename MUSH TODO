MUSH TODO
---------

OPTIMIZATIONS
- crawling cubes (start at a cell that's on the surface then only explore neighbor cells that are also on the surface)
- vectorize some shit??

CLEAN
- replace XYZ everywhere with GLKVector3
- get rid of global vars used in e.g. meshMetaballs
- split up meshMetaballs
- move meshMetaballs into a module

FIX
- clarify the shader to make it obvious that it's a directional light, not a positional one
- figure out why the metaballs look different now (weird perspective, weird intra-clipping) than they did before

LOOKS

PLAY
- a value field that starts with all 1s (a cube) and then you can add/subtract from the volume by touching and value is added/subtracted from the cells around the one your touch hit
  * can figure out what cell was touched by having a render buffer whose pixels store the xyz of the cell that generated that face
- draw lines in space and have them generate surfaces as well as points
- create "negative" metaballs, which subtract force in the same way that normal ones contribute force
